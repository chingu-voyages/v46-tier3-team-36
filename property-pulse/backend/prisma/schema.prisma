generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int            @id @default(autoincrement())
  name                   String
  password               String?
  email                  String         @unique
  emailVerified          DateTime?
  image                  String?
  role                   Role           @default(tenant)
  issues                 Issue[]
  notifications          Notification[]

  // tenants
  residence              Unit[]

  // managers
  properties             Property[]   @relation("Properties")
}

model Session {
  sid                   String        @id @db.VarChar
  sess                  Json          @db.Json
  expire                DateTime      @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
  @@map(name: "session")
}

enum Role {
  manager
  tenant
}

// Associate issues with unit, except inquiries
model Issue {
  id              Int              @id @default(autoincrement())
  status          IssueStatus      @default(open)
  type            IssueType
  tenant          User             @relation(fields: [tenantId], references: [id])
  tenantId        Int
  unit            Unit?             @relation(fields: [unitId], references: [id])
  unitId          Int?
  createdAt       DateTime         @default(now()) @db.Timestamptz()
  updatedAt       DateTime         @updatedAt
  title           String
  description     String
}

enum IssueStatus {
  open
  closed
}

enum IssueType {
  maintenanceRequest
  complaint
  inquiry
}

model Notification {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime         @default(now()) @db.Timestamptz()
  title           String
  content         String
  read            Boolean          @default(false)
  isNew           Boolean          @default(true)
}

model Property {
  id              Int              @id @default(autoincrement())
  owner           User             @relation(fields: [ownerId], references: [id], name: "Properties")
  ownerId         Int 
  name            String
  description     String?
  units           Unit[]
}

model Unit {
  id              Int              @id @default(autoincrement())
  property        Property         @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId      Int
  tenants         User[]
  issues          Issue[]
  name            String
  description     String?
  rent            Decimal          @db.Decimal(10,2)
}



// model Message {

// }

// model Bill {

// }